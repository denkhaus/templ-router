# Development Dockerfile
FROM golang:1.25-alpine AS development

# Install system dependencies
RUN apk add --no-cache \
    git \
    curl \
    nodejs \
    npm \
    su-exec

# Create user and home directory for proper permissions
RUN adduser -D -u 1000 -g 1000 user && \
    mkdir -p /home/user/.cache/go-build && \
    chown -R 1000:1000 /home/user

# Install development tools
RUN go install github.com/air-verse/air@latest
RUN go install github.com/a-h/templ/cmd/templ@latest
RUN go install github.com/magefile/mage@latest
# Install template-generator from local source (after copying source code)
# This will be done after COPY step

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Install Node.js dependencies for Tailwind
#RUN npm install -g pnpm

# Copy source code with proper ownership
COPY --chown=1000:1000 . .

# Install template-generator from local source with version info
RUN cd cmd/template-generator && go install -ldflags="-X 'github.com/denkhaus/templ-router/cmd/template-generator/version.Version=docker-local' -X 'github.com/denkhaus/templ-router/cmd/template-generator/version.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)'" .

RUN cd demo && npm install
# Generate Templ code
RUN templ generate

# Build Tailwind CSS
RUN mage build:tailwindClean

# Copy and setup entrypoint script
COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Expose port
EXPOSE 8084

# Default command (can be overridden in docker-compose)
ENTRYPOINT ["/entrypoint.sh"]
CMD ["mage", "dev"]
