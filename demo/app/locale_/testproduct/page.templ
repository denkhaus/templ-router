package testproduct

import (
	"fmt"
	"github.com/denkhaus/templ-router/demo/pkg/dataservices"
	"github.com/denkhaus/templ-router/pkg/router/i18n"
)

templ Page(data *dataservices.ProductData) {
	<div class="max-w-4xl mx-auto">
		<div class="bg-white rounded-lg shadow-lg overflow-hidden">
			<!-- Product Header -->
			<div class="bg-gradient-to-r from-green-500 to-blue-600 px-8 py-12">
				<div class="flex items-center space-x-6">
					<div class="w-24 h-24 bg-white rounded-full flex items-center justify-center">
						<svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
						</svg>
					</div>
					<div class="text-white">
						<h1 class="text-3xl font-bold">{ i18n.T(ctx, "product_header_title") }</h1>
						<p class="text-green-100 mt-2">{ i18n.T(ctx, "product_id_label") }: { data.ID }</p>
						<p class="text-green-100">{ i18n.T(ctx, "testing_getdata_only") }</p>
					</div>
				</div>
			</div>
			<!-- Product Content -->
			<div class="p-8">
				<div class="grid grid-cols-1 md:grid-cols-2 gap-8">
					<!-- Product Details Section -->
					<div>
						<h2 class="text-2xl font-semibold text-gray-800 mb-6">{ i18n.T(ctx, "product_information") }</h2>
						<div class="space-y-4">
							<div class="flex justify-between items-center py-3 border-b border-gray-200">
								<span class="text-gray-600 font-medium">{ i18n.T(ctx, "product_name") }</span>
								<span class="text-gray-800">{ data.Name }</span>
							</div>
							<div class="flex justify-between items-center py-3 border-b border-gray-200">
								<span class="text-gray-600 font-medium">{ i18n.T(ctx, "description") }</span>
								<span class="text-gray-800">{ data.Description }</span>
							</div>
							<div class="flex justify-between items-center py-3 border-b border-gray-200">
								<span class="text-gray-600 font-medium">{ i18n.T(ctx, "price") }</span>
								<span class="text-gray-800">${ fmt.Sprintf("%.2f", data.Price) }</span>
							</div>
							<div class="flex justify-between items-center py-3 border-b border-gray-200">
								<span class="text-gray-600 font-medium">{ i18n.T(ctx, "category") }</span>
								<span class="px-2 py-1 bg-green-100 text-green-800 rounded text-sm">{ data.Category }</span>
							</div>
							<div class="flex justify-between items-center py-3 border-b border-gray-200">
								<span class="text-gray-600 font-medium">{ i18n.T(ctx, "in_stock") }</span>
								if data.InStock {
									<span class="px-2 py-1 bg-green-100 text-green-800 rounded text-sm">{ i18n.T(ctx, "yes") }</span>
								} else {
									<span class="px-2 py-1 bg-red-100 text-red-800 rounded text-sm">{ i18n.T(ctx, "no") }</span>
								}
							</div>
						</div>
					</div>
					<!-- Test Info -->
					<div>
						<h2 class="text-2xl font-semibold text-gray-800 mb-6">{ i18n.T(ctx, "dataservice_test_info") }</h2>
						<div class="bg-green-50 border border-green-200 rounded-lg p-6">
							<h3 class="text-lg font-semibold text-green-800 mb-3">{ i18n.T(ctx, "getdata_method_test") }</h3>
							<p class="text-green-700 mb-2">{ i18n.T(ctx, "getdata_description") }</p>
							<div class="text-sm text-green-700 space-y-1">
								<p><strong>{ i18n.T(ctx, "service_label") }:</strong> dataservices.ProductDataService</p>
								<p><strong>{ i18n.T(ctx, "available_methods") }:</strong> { i18n.T(ctx, "getdata_only") }</p>
								<p><strong>{ i18n.T(ctx, "expected_behavior") }:</strong> { i18n.T(ctx, "should_call_getdata") }</p>
								<p><strong>{ i18n.T(ctx, "data_type") }:</strong> *dataservices.ProductData</p>
								<p><strong>{ i18n.T(ctx, "route_label") }:</strong> /{ i18n.GetCurrentLocale(ctx) }/testproduct</p>
							</div>
							<div class="mt-4 p-3 bg-green-100 rounded">
								<p class="text-sm text-green-800">
									<strong>{ i18n.T(ctx, "welcome_message") }</strong>
								</p>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}