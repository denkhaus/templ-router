package testspecific

import (
	"github.com/denkhaus/templ-router/demo/pkg/dataservices"
	"github.com/denkhaus/templ-router/pkg/router/i18n"
)

templ Page(data *dataservices.SpecificData) {
	<div class="max-w-4xl mx-auto">
		<div class="bg-white rounded-lg shadow-lg overflow-hidden">
			<!-- Specific Method Header -->
			<div class="bg-gradient-to-r from-indigo-500 to-cyan-600 px-8 py-12">
				<div class="flex items-center space-x-6">
					<div class="w-24 h-24 bg-white rounded-full flex items-center justify-center">
						<svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
						</svg>
					</div>
					<div class="text-white">
						<h1 class="text-3xl font-bold">{ i18n.T(ctx, "specific_method_header") }</h1>
						<p class="text-indigo-100 mt-2">{ i18n.T(ctx, "data_id_label") }: { data.ID }</p>
						<p class="text-indigo-100">{ i18n.T(ctx, "testing_specific_method") }</p>
					</div>
				</div>
			</div>
			<!-- Content -->
			<div class="p-8">
				<div class="grid grid-cols-1 md:grid-cols-2 gap-8">
					<!-- Data Details Section -->
					<div>
						<h2 class="text-2xl font-semibold text-gray-800 mb-6">{ i18n.T(ctx, "data_information") }</h2>
						<div class="space-y-4">
							<div class="flex justify-between items-center py-3 border-b border-gray-200">
								<span class="text-gray-600 font-medium">{ i18n.T(ctx, "title_label") }</span>
								<span class="text-gray-800">{ data.Title }</span>
							</div>
							<div class="flex justify-between items-center py-3 border-b border-gray-200">
								<span class="text-gray-600 font-medium">{ i18n.T(ctx, "description_label") }</span>
								<span class="text-gray-800 text-sm">{ data.Description }</span>
							</div>
							<div class="flex justify-between items-center py-3 border-b border-gray-200">
								<span class="text-gray-600 font-medium">{ i18n.T(ctx, "method_called") }</span>
								<span class="px-2 py-1 bg-indigo-100 text-indigo-800 rounded text-sm">{ data.Method }</span>
							</div>
						</div>
					</div>
					<!-- Test Info -->
					<div>
						<h2 class="text-2xl font-semibold text-gray-800 mb-6">{ i18n.T(ctx, "dataservice_test_info") }</h2>
						<div class="bg-indigo-50 border border-indigo-200 rounded-lg p-6">
							<h3 class="text-lg font-semibold text-indigo-800 mb-3">{ i18n.T(ctx, "specific_method_test") }</h3>
							<p class="text-indigo-700 mb-2">{ i18n.T(ctx, "specific_method_description") }</p>
							<div class="text-sm text-indigo-700 space-y-1">
								<p><strong>{ i18n.T(ctx, "service_label") }:</strong> dataservices.SpecificOnlyDataService</p>
								<p><strong>{ i18n.T(ctx, "available_methods") }:</strong> { i18n.T(ctx, "getspecific_only") }</p>
								<p><strong>{ i18n.T(ctx, "missing_method") }:</strong> { i18n.T(ctx, "getdata_not_implemented") }</p>
								<p><strong>{ i18n.T(ctx, "expected_behavior") }:</strong> { i18n.T(ctx, "should_call_specific") }</p>
								<p><strong>{ i18n.T(ctx, "data_type") }:</strong> *dataservices.SpecificData</p>
								<p><strong>{ i18n.T(ctx, "route_label") }:</strong> /{ i18n.GetCurrentLocale(ctx) }/testspecific</p>
							</div>
							<div class="mt-4 p-3 bg-indigo-100 rounded">
								<p class="text-sm text-indigo-800">
									<strong>{ i18n.T(ctx, "success_indicator") }:</strong> { i18n.T(ctx, "success_message") }
								</p>
							</div>
						</div>
					</div>
				</div>
				<!-- Important Note -->
				<div class="mt-8 bg-yellow-50 border border-yellow-200 rounded-lg p-6">
					<h3 class="text-lg font-semibold text-yellow-800 mb-3">{ i18n.T(ctx, "important_note") }</h3>
					<p class="text-yellow-700 text-sm">{ data.Note }</p>
					<div class="mt-3 p-2 bg-yellow-100 rounded">
						<p class="text-xs text-yellow-800">
							<strong>{ i18n.T(ctx, "welcome_message") }</strong>
						</p>
					</div>
				</div>
			</div>
		</div>
	</div>
}