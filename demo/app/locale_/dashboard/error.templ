package dashboard

import (
	"fmt"
	"github.com/denkhaus/templ-router/pkg/router"
	"github.com/denkhaus/templ-router/pkg/router/middleware"
	"strconv"
)

// Dashboard Error Template - Uses ErrorContext for flexible error handling
templ Error(errCtx middleware.ErrorContext) {
	<div class="max-w-2xl mx-auto text-center">
		<div class="bg-red-50 border border-red-200 rounded-lg p-8">
			<div class="text-6xl font-bold text-red-500 mb-4">{ strconv.Itoa(errCtx.StatusCode) }</div>
			<h1 class="text-3xl font-bold text-gray-800 mb-4">{ router.T(ctx, "error_title") }</h1>
			<p class="text-lg text-gray-600 mb-6">
				if errCtx.StatusCode == 404 {
					{ router.T(ctx, "error_404_message") }
				} else if errCtx.StatusCode == 500 {
					{ router.T(ctx, "error_500_message") }
				} else if errCtx.StatusCode == 403 {
					{ router.T(ctx, "error_403_message") }
				} else {
					{ errCtx.Message }
				}
			</p>
			<!-- Dashboard-specific error info -->
			<div class="bg-yellow-50 border border-yellow-200 rounded p-4 mb-6">
				<h3 class="text-lg font-semibold text-yellow-800 mb-2">{ router.T(ctx, "dashboard_error_info") }</h3>
				<p class="text-yellow-700 text-sm">{ router.T(ctx, "dashboard_error_description") }</p>
			</div>
			<div class="space-x-4">
				<a href={ templ.URL("/" + router.GetCurrentLocale(ctx)) } class="bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600 transition-colors">
					{ router.T(ctx, "button_go_home") }
				</a>
				<a href={ templ.URL("/" + router.GetCurrentLocale(ctx) + "/dashboard") } class="bg-green-500 text-white px-6 py-2 rounded hover:bg-green-600 transition-colors">
					{ router.T(ctx, "button_back_dashboard") }
				</a>
				<button onclick="history.back()" class="bg-gray-500 text-white px-6 py-2 rounded hover:bg-gray-600 transition-colors">
					{ router.T(ctx, "button_go_back") }
				</button>
			</div>
			<!-- Multi-language error demo -->
			<div class="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-4">
				<h3 class="text-sm font-semibold text-blue-800 mb-2">{ router.T(ctx, "multilang_error_demo") }</h3>
				<div class="text-xs text-blue-700 space-y-1">
					<p><strong>{ router.T(ctx, "current_locale") }:</strong> { router.GetCurrentLocale(ctx) }</p>
					<p><strong>{ router.T(ctx, "error_template") }:</strong> { router.GetCurrentTemplate(ctx) }</p>
					<p><strong>{ router.T(ctx, "available_translations") }:</strong> { fmt.Sprint(len(router.GetAvailableKeys(ctx))) }</p>
					<p class="mt-2">
						<strong>{ router.T(ctx, "switch_language") }:</strong>
						if router.GetCurrentLocale(ctx) == "en" {
							<a href="/de/dashboard/error-demo" class="underline hover:text-blue-900">{ router.T(ctx, "view_in_german") }</a>
						} else {
							<a href="/en/dashboard/error-demo" class="underline hover:text-blue-900">{ router.T(ctx, "view_in_english") }</a>
						}
					</p>
				</div>
			</div>
		</div>
	</div>
}
